clc;
clear;
close all;

% Parámetros D-H
a1 = 0;       % Longitud del primer enlace (m)
a2 = 5;       % Longitud del segundo enlace (m)
a3 = 0;       % Longitud del tercer enlace (m)
d1 = 0;       % Desplazamiento en z del primer enlace (m)
d2 = 5;       % Desplazamiento en z del segundo enlace (m)
d3 = 0;      % Desplazamiento en z del tercer enlace (m)
alpha1 = 0;   % Ángulo de inclinación entre z0 y z1
alpha2 = 90;  % Ángulo de inclinación entre z1 y z2
alpha3 = 0; % Ángulo de inclinación entre z2 y z3

% Rango de los ángulos (en grados)
for i = 0:1:100
theta1(i+1) = i;  % Ángulo del motor 1
theta2(i+1) = i;  % Ángulo del motor 2
theta3(i+1) = 90;  % Ángulo del punto 3
end
% Prealocando matrices para velocidad
p0 = [0; 0; 0; 1]; % Origen fijo
p1 = zeros(3, length(theta1));
p2 = zeros(3, length(theta1));
p3 = zeros(3, length(theta1));
r1 = zeros(3, length(theta1)); % Vector de orientación 1
r2 = zeros(3, length(theta1)); % Vector de orientación 2
r3 = zeros(3, length(theta1)); % Vector de orientación 3

% Calculando las posiciones de cada punto y orientación
for k = 1:length(theta1)
    % Matrices de transformación en cadena
    T1 = Matriz_TH(theta1(k), alpha1, d1, a1); % Transformación de la primera articulación
    T2 = T1 * Matriz_TH(theta2(k), alpha2, d2, a2); % Segunda articulación basada en la primera
    T3 = T2 * Matriz_TH(theta3(k), alpha3, d3, a3); % Tercera articulación basada en la segunda

    % Extrayendo posiciones
    p1(:,k) = T1(1:3, 4); % Posición de la articulación 1
    p2(:,k) = T2(1:3, 4); % Posición de la articulación 2
    p3(:,k) = T3(1:3, 4); % Posición de la articulación 3
    
    % Extrayendo los vectores de orientación (ejes Z)
    r1(:,k) = T1(1:3, 3); % Vector orientación en la articulación 1 (eje Z)
    r2(:,k) = T2(1:3, 3); % Vector orientación en la articulación 2 (eje Z)
    r3(:,k) = T3(1:3, 3); % Vector orientación en la articulación 3 (eje Z)
end

% Graficando el movimiento en 3D
figure;
hold on;
grid on;
axis equal;
xlabel('X');
ylabel('Y');
zlabel('Z');
title('Movimiento de los 3 puntos en 3D');
plot3(p1(1,:), p1(2,:), p1(3,:), 'r', 'LineWidth', 2); % Punto 1
plot3(p2(1,:), p2(2,:), p2(3,:), 'g', 'LineWidth', 2); % Punto 2
plot3(p3(1,:), p3(2,:), p3(3,:), 'b', 'LineWidth', 2); % Punto 3

% Marcando puntos iniciales y finales
scatter3(p1(1,1), p1(2,1), p1(3,1), 'ro', 'filled');
scatter3(p2(1,1), p2(2,1), p2(3,1), 'go', 'filled');
scatter3(p3(1,1), p3(2,1), p3(3,1), 'bo', 'filled');
scatter3(p1(1,end), p1(2,end), p1(3,end), 'rx');
scatter3(p2(1,end), p2(2,end), p2(3,end), 'gx');
scatter3(p3(1,end), p3(2,end), p3(3,end), 'bx');

% Dibujar los vectores de orientación (ejes Z)
quiver3(p1(1,:), p1(2,:), p1(3,:), r1(1,:), r1(2,:), r1(3,:), 0.5, 'r', 'LineWidth', 2); % Eje Z en la articulación 1
quiver3(p2(1,:), p2(2,:), p2(3,:), r2(1,:), r2(2,:), r2(3,:), 0.5, 'g', 'LineWidth', 2); % Eje Z en la articulación 2
quiver3(p3(1,:), p3(2,:), p3(3,:), r3(1,:), r3(2,:), r3(3,:), 0.5, 'b', 'LineWidth', 2); % Eje Z en la articulación 3

legend('Punto 1', 'Punto 2', 'Punto 3', 'Inicio 1', 'Inicio 2', 'Inicio 3', 'Final 1', 'Final 2', 'Final 3');
view(3);
